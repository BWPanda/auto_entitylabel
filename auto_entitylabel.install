<?php
/**
 * @file
 * Installation file for the automatic entity labels module.
 */

/**
 * Implements hook_install().
 */
function auto_entitylabel_install() {
  // Make sure hooks are invoked after core field hooks.
  db_update('system')
    ->fields(array('weight' => 5))
    ->condition('name', 'auto_entitylabel')
    ->execute();

  // Set default config values for existing entities.
  $config = config('auto_entitylabel.settings');
  $bundles = _auto_entitylabel_get_bundles();
  foreach ($bundles['keys'] as $key) {
    $config->set($key, array(
      'status' => AUTO_ENTITYLABEL_DISABLED,
      'pattern' => '',
      'php' => 0,
      'strip' => 1,
    ));
  }
  $config->save();
}

/**
 * Convert variables to config.
 */
function auto_entitylabel_update_1000(&$sandbox) {
  $config = config('auto_entitylabel.settings');
  $bundles = _auto_entitylabel_get_bundles();
  foreach ($bundles['keys'] as $key) {
    $config->set($key . '.status', update_variable_get('auto_entitylabel_status_' . $key, 0));
    $config->set($key . '.pattern', update_variable_get('auto_entitylabel_pattern_' . $key, ''));
    $config->set($key . '.php', update_variable_get('auto_entitylabel_php_' . $key, 0));
  }
  $config->save();
}

/**
 * Convert strip variable to config.
 */
function auto_entitylabel_update_1001() {
  $config = config('auto_entitylabel.settings');
  $bundles = _auto_entitylabel_get_bundles();
  foreach ($bundles['keys'] as $key) {
    $config->set($key . '.strip', update_variable_get('auto_entitylabel_strip_' . $key, 1));
    update_variable_del('auto_entitylabel_strip_' . $key);
  }
  $config->save();
}